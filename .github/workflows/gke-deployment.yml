name: Build and Deploy to GKE

on: 
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast2 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: icx-production    # TODO: update to cluster name
  GKE_ZONE: asia-southeast2   # TODO: update to cluster zone
  IMAGE_NAME: icx-landing-page 
  REPOSITORY: icx-ar # TODO: update to Artifact Registry docker repository
  DEPLOYMENT_NAME: icx-landing-page

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: self-hosted
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Run a test
      run: |
       gcloud components list
       echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
       curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
       sudo apt update
       sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
       echo "##vso[task.setvariable variable=USE_GKE_GCLOUD_AUTH_PLUGIN]True"
       gcloud components list
       sudo apt-get update && sudo apt-get --only-upgrade install google-cloud-sdk-app-engine-python-extras google-cloud-sdk-datalab google-cloud-sdk-config-connector google-cloud-sdk-harbourbridge google-cloud-sdk-app-engine-java google-cloud-sdk google-cloud-sdk-spanner-emulator google-cloud-sdk-package-go-module google-cloud-sdk-skaffold kubectl google-cloud-sdk-terraform-tools google-cloud-sdk-kubectl-oidc google-cloud-sdk-cbt google-cloud-sdk-log-streaming google-cloud-sdk-local-extract google-cloud-sdk-pubsub-emulator google-cloud-sdk-app-engine-grpc google-cloud-sdk-app-engine-python google-cloud-sdk-app-engine-go google-cloud-sdk-anthos-auth google-cloud-sdk-nomos google-cloud-sdk-cloud-run-proxy google-cloud-sdk-firestore-emulator google-cloud-sdk-gke-gcloud-auth-plugin google-cloud-sdk-cloud-build-local google-cloud-sdk-minikube google-cloud-sdk-kpt google-cloud-sdk-bigtable-emulator google-cloud-sdk-datastore-emulator
       gcloud components list
       export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      
    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
    - name: Get GKE Credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: add .env
      run: echo '${{ secrets.ENV }}' >> .env


    - name: Build Docker Image
      run: docker build -f ./Dockerfile -t asia-southeast2-docker.pkg.dev/landx-id/$REPOSITORY/$IMAGE_NAME:latest .

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

    - name: Push Docker Image to Artifact Registry
      run: |-
        docker push asia-southeast2-docker.pkg.dev/landx-id/$REPOSITORY/$IMAGE_NAME:latest

    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Deploy Image to GKE cluster
      run: |-
        ./kustomize edit set image asia-southeast2-docker.pkg.dev/landx-id/$REPOSITORY/$IMAGE_NAME:latest
        ./kustomize build . | kubectl apply -f -
        kubectl rollout restart deployment/$DEPLOYMENT_NAME -n production
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n production
        kubectl get services -o wide -n icx-staging